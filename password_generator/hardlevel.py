# This code generates a random password based on user input for the length and character types (uppercase, numbers, symbols).
# It uses the random and string modules to create a password that includes the specified character types.
# The password is generated by randomly selecting characters from the combined character set.
# The user is prompted to enter the desired length and character types for the password.
# The password is then generated and displayed to the user.
# This code generates a random password based on user input for the length and character types (uppercase, numbers, symbols).
# It uses the random and string modules to create a password that includes the specified character types.
# The password is generated by randomly selecting characters from the combined character set.
import random
import string

def generate_password(length, use_uppercase=True, use_numbers=True, use_symbols=True):
    lower = string.ascii_lowercase
    upper = string.ascii_uppercase if use_uppercase else ""
    numbers = string.digits if use_numbers else ""
    symbols = string.punctuation if use_symbols else ""

    all_characters = lower + upper + numbers + symbols
    if not all_characters:
        raise ValueError("At least one character set must be selected.")

    password = "".join(random.choice(all_characters) for _ in range(length))
    return password
def main():
    print("Welcome to the Hard Level Password Generator!")
    length = int(input("How long would you like your password to be?\n"))
    use_uppercase = input("Would you like to include uppercase letters? (y/n)\n").lower() == 'y'
    use_numbers = input("Would you like to include numbers? (y/n)\n").lower() == 'y'
    use_symbols = input("Would you like to include symbols? (y/n)\n").lower() == 'y'

    password = generate_password(length, use_uppercase, use_numbers, use_symbols)
    print(f"Your password is: {password}")
if __name__ == "__main__":
    main()
# This code generates a random password based on user input for the length and character types (uppercase, numbers, symbols).
# It uses the random and string modules to create a password that includes the specified character types.
# The password is generated by randomly selecting characters from the combined character set.
# The user is prompted to enter the desired length and character types for the password.
# The password is then generated and displayed to the user.